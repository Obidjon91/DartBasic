/*
  Задача 1: Уникальные элементы
Создайте список из 20 случайных целых чисел (в диапазоне от 1 до 50) и напишите функцию, 
которая возвращает новый список, содержащий только уникальные элементы.

Задача 2: Перевернуть список
Напишите функцию, которая принимает список и возвращает его перевёрнутую версию. 
Например,для списка [1, 2, 3] результатом будет [3, 2, 1].

Задача 3: Слияние и сортировка
Создайте два списка из 10 целых чисел, 
объедините их в один и отсортируйте по убыванию. 
Выведите результат.

Задача 4: Частота элементов
Напишите функцию, которая принимает список и возвращает карту (Map), 
где ключ — элемент списка, а значение — количество его вхождений в список.

Задача 5: Список квадратов
Создайте список из 10 целых чисел и напишите функцию, 
которая возвращает новый список, содержащий квадраты этих чисел.

Задача 6: Взаимное исключение
Напишите функцию, которая принимает два списка и возвращает новый список, 
содержащий только те элементы, которые присутствуют в одном из списков, 
но отсутствуют в другом.

Задача 7: Комбинации элементов
Создайте список из 4 строк и напишите функцию, 
которая генерирует все возможные комбинации из двух строк. 
Например, для списка ["a", "b", "c", "d"] 
результатом будут: ["a, b", "a, c", "a, d", "b, c", "b, d", "c, d"].

Задача 8: Параллельные списки
Создайте два списка: один с именами и другой с оценками. 
Напишите функцию, которая возвращает список строк в формате "Имя: Оценка".

Задача 9: Удаление дубликатов
Напишите функцию, которая принимает список и удаляет все дубликаты, 
сохраняя порядок появления элементов.

Задача 10: Найти максимальную разницу
Создайте список из 10 целых чисел и напишите функцию, 
которая находит максимальную разницу между любыми двумя элементами списка.
 */

import 'dart:math';

void main(List<String> arguments) {
  zadanija1();
  zadanija2();
}
void zadanija1() {
  var unikalniyNumbers = <int>[];
  List<int> numbers = List.generate(20, (index) => Random().nextInt(50) + 1);

  for (int i = 0; i < numbers.length; i++) {
    if (!unikalniyNumbers.contains(numbers[i])) {
      unikalniyNumbers.add(numbers[i]);
    }
  }
  unikalniyNumbers.sort();
  // print(unikalniyNumbers);
}

void zadanija2() {}